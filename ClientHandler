import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

/**
 * Created by QuantCapital on 03.05.2017.
 */
public class ClientHandler implements Runnable {
    private Socket s;
    private PrintWriter out;
    private Scanner in;
    private static int CLIENTS_COUNT = 0;
    private String name;

    public ClientHandler(Socket s) {
        try {
            // при создании обработчика, даем ему ссылку на обрабатываемое соединение (сокет)
            this.s = s;
            // PrintWriter служит для отсылки сообщений клиенту
            out = new PrintWriter(s.getOutputStream());
            // Scanner предназначен для чтения сообщений от клиента
            in = new Scanner(s.getInputStream());
            // Подсчитываем количество клиентов
            CLIENTS_COUNT++;
            name = "Клиент #" + CLIENTS_COUNT;
        } catch (IOException e) {
        }
    }
    @Override
    // метод обмен сообщениями
    public void run() {
        // запускаем бесконечный цикл
        while (true) {
            // если от клиента пришло сообщение
            if (in.hasNext()) {
                // читаем его
                String w = in.nextLine();
                // печатаем это сообщение в консоль
                System.out.println(name + ":" + w);
                // и отсылаем обратно с добавлением фразы "echo: "
                out.println("echo: " + w);
                out.flush();
                // если клиент прислал "end", выходим из бесконечного цикла
                if (w.equalsIgnoreCase("END")) break;
            }
        }
        try {
            System.out.println("Клиент отключился");
            // закрываем сокет
            s.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }
}
